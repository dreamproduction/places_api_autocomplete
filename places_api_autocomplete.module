<?php

/**
 * Implements hook_menu().
 */
function places_api_autocomplete_menu() {
  $items['places/autocomplete'] = array(
    'title' => 'Places autocomplete',
    'page callback' => 'places_autocomplete',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/services/places'] = array(
    'title' => 'Google Places API',
    'description' => 'Configure Google Places API settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('places_api_autocomplete_admin_settings'),
    'file' => 'places_api_autocomplete.admin.inc',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function places_autocomplete($string = '') {
  $matches = array();
  if ($string) {
    $key = variable_get('places_api_autocomplete_key', NULL);
    $cacheObject = new GooglePlacesAutocompleteCacheDrupal();
    $options = variable_get('places_api_options');
    $placesApi = new GooglePlacesAutocomplete($key, $cacheObject, $options);
    $result = $placesApi->search($string);
    foreach ($result as $place) {
      $matches[$place->description] = check_plain($place->description);
    }
  }

  drupal_json_output($matches);
}

/**
 * Implements hook_field_widget_info().
 */
function places_api_autocomplete_field_widget_info() {
  return array(
    'places_autocomplete' => array(
      'label' => 'Google Places Autocomplete',
      'description' => 'A text field with Google Places API Autocomplete',
      'field types' => array('text'),
      'settings' => array(
        'size' => 60,
        'offset' => '',
        'location' => '',
        'radius' =>  '',
        'language' => '',
        'type' => '',
        'components' => '',
      ),
    ),
  );
}

/**
 * Implements hook_field_widget_settings_form().
 */
function places_api_autocomplete_field_widget_settings_form($field, $instance) {
  $widget = $instance['widget'];
  $settings = $widget['settings'];

  if ($widget['type'] == 'places_autocomplete') {
    $form['size'] = array(
      '#type' => 'textfield',
      '#title' => t('Size of textfield'),
      '#default_value' => $settings['size'],
      '#required' => TRUE,
      '#element_validate' => array('element_validate_integer_positive'),
    );

    $documentation_link = 'https://developers.google.com/places/documentation/autocomplete#place_autocomplete_requests';
    $places_api_options = variable_get('places_api_options');
    $form['places_api_options'] = array(
      '#type' => 'fieldset',
      '#title' => t('Places API parameters'),
      '#tree' => TRUE,
      '#description' => 'Documentation about the paramenters, can be found <a target="_blank" href="' . $documentation_link . '">here</a>.',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );

    $form['places_api_options']['offset'] = array(
      '#type' => 'textfield',
      '#title' => 'Offset',
      '#default_value' => $settings['places_api_options']['offset'] ? $settings['places_api_options']['offset'] : $places_api_options['offset'],
    );
    $form['places_api_options']['location'] = array(
      '#type' => 'textfield',
      '#title' => 'Location',
      '#default_value' => $settings['places_api_options']['location'] ? $settings['places_api_options']['location'] : $places_api_options['location'],
    );
    $form['places_api_options']['radius'] = array(
      '#type' => 'textfield',
      '#title' => 'Radius',
      '#default_value' => $settings['places_api_options']['radius'] ? $settings['places_api_options']['radius'] : $places_api_options['radius'],
    );
    $form['places_api_options']['language'] = array(
      '#type' => 'textfield',
      '#title' => 'Language',
      '#default_value' => $settings['places_api_options']['language'] ? $settings['places_api_options']['language'] : $places_api_options['language'],
    );
    $form['places_api_options']['types'] = array(
      '#type' => 'textfield',
      '#title' => 'Types',
      '#default_value' => $settings['places_api_options']['types'] ? $settings['places_api_options']['types'] : $places_api_options['types'],
    );
    $form['places_api_options']['components'] = array(
      '#type' => 'textfield',
      '#title' => 'Components',
      '#default_value' => $settings['places_api_options']['components'] ? $settings['places_api_options']['components'] : $places_api_options['components'],
    );
  }

  return $form;
}

/**
 * Implements hook_field_widget_form().
 */
function places_api_autocomplete_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $element['value'] = array(
    '#type' => 'textfield',
    '#title' => $instance['label'],
    '#default_value' => isset($items[$delta]['value']) ? $items[$delta]['value'] : NULL,
    '#size' => $instance['widget']['settings']['size'],
    '#maxlength' => $field['settings']['max_length'],
    '#attributes' => array('class' => array('text-full')),
    '#autocomplete_path' => 'places/autocomplete',
  );

  return $element;
}
